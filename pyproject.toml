[tool.poetry]
name = "stagescript"
version = "0.1.0"
description = ""
authors = ["Tomas Votava <info@tomasvotava.eu>"]
license = "MIT"
readme = "README.md"

[tool.poetry.scripts]
stagescript = "stagescript.__main__:cli"

[tool.poetry.dependencies]
python = "^3.10"
colorlog = "^6.8.2"
click = "^8.1.7"
python-slugify = "^8.0.4"

[tool.pytest.ini_options]
addopts = [
    "-vv",
    "--cov=stagescript",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-report=lcov",
]

[tool.poetry.group.dev.dependencies]
black = "^24.3.0"
mypy = "^1.9.0"
pytest = ">7,<8"
pytest-cov = "^5.0.0"
pre-commit = "^3.7.0"
commitizen = "^3.21.3"
ruff = "^0.3.5"
types-python-slugify = "^8.0.2.20240310"

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
    #"D",
    "E",
    "F",
    "B",
    "I",
    "N",
    "UP",
    "S",
    "A",
    "DTZ",
    "PT",
    "SIM",
    "PTH",
    "PD",
    "RUF",
    "T20",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["stagescript"]

[tool.black]
line-length = 120

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "semver"
version_provider = "poetry"
update_changelog_on_bump = true
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict = true

#[[tool.mypy.overrides]]
#module = ["pytest.*"]
#ignore_missing_imports = true
